remain logged in when exit app - use setPrefs
preview color on color select in timetable
setting page
admin edit course
populate timetable using admin default timetable

grand master plan:
implement bid for timetable

things to ask:
app data persist on app close

problem i solved:
image base64 problem - base64 strings are huge and takes too long to read, therefore slowing down functions that does not require image loading. The base64 string is then moved to another table and called upon when required to save time
openframe problem - using only openFrame or openWin is too limiting and the design looks very inconsistent. Therefore a frame and a body html page is created seperately and is loaded the same way as index.html
smssdk - project folder could not sync with the cloud version, hence the module smssdk and mobtools could not be added. The current github folder have to match the criteria and uploaded to the cloud for the modules to run successfully
designing dynamic timetable with html + CSS -  using a html table is challenging since any custom timetable block have to take up an exact amount of columns and rows.after much consideration I decided to give each grid an id so that i can change all affected grid's CSS at once. By setting display="none" for blocks i don't need, i can prevent an overflow of grids 
back button - because frames are being opened on top of each other, the method closeFrame() has to be dynamic since the frame name is required to close them. In order to make it dynamic, the api.frame method is called to get all current frames' name. After that I just have to close the last frame in the array to mimic a back action.

task completed 3rd week:
Local storage for persistent data across pages
Password validation for at least 6 characters, one alphabet and one number
Password hashing
Ip address for wifi stored in txt file for reading
Image upload for profile picture
Default profile image if no picture is selected
Check for used username, email and phone number
Loading screen
Provide a proper error message at the top of register and login page 

task completed 4th week:
otp for authentication, 2FA
fix back button
add specific block to timetable
save array of strings into mongodb
check for existing block
load timetable block
remove block
populate school and course data

task completed 5th week:
edit block in database
course auto loads on school select
after register go to login
fix footer for nav bar

task completed 6th week:
navbar
back button
populate course on admin sch select
set up admin control of timetable default
